Блок пхп:



* База Пхп

1) Что такое пхп - PHP  - это распространённый язык программирования для создание веб-приложении. PHP специально сконструирован для веб-разработок и его код может внедряться непосредственно в HTML. 

И еще нужно изучить историю пхп, хоть немного
---------------

2) Типизация данных

Бывает строгая и динамическая типизация

и они делятся на две пункты, слабая и сильная

* Статическая - это означает что при создании переменной, то нам нужно явно указать тип переменной

* Динамическая - наоборот нам ненужно указывать какой тип будет присвоен, тип указывается на основании значения в переменной

* Слабая типизация - это означает что, при действии с двумя переменными, например:  мы складываем строку '5' и число 4, то пхп сам преобразует его в нужный тип, т.е нам ненужно заботится о том что, чтобы '5' - преобразовали в число а потом складывали, это делает пхп сам
 
* Строгая типизация - это наоборот вышему, когда мы складываем число и строку, то мы должны сперва перобразовать их в один тип, и тогда мы можем производить действия

Прочитать если необходимо- https://habr.com/ru/post/161205/
-------------------

3) Сколько типов данных в пхп

1) Bool - это булевый тип, в котором хранится значение True или False
2) String - как ясно из названия, это строка 
3) Integer - В этом типе хранятся числа 
4) double - хранение десятичных чисел т.е с плавающей точкой 
5) array - тип массив, массив - сказать так, более расширенная переменная, там хранятся более одного элемента, и они будут доступны по нумерации 
6) object - это объект класса
7) null - Это тип который указывает что переменная не существует, отсутвие значение
8) resource - это некая  ссылка указывающая на внешный идентификатор, крч объясни им
9) iterable - это псевдтип, он приминает любой массив или объект, и перебирает его
10) callable (callback) - это могут быть как простыми функциями, так и методами объектов, включая статические методы классов.

// Пример callback-функции

function my_callback_function() {
    echo 'Привет, мир!';
}


// Пример callback-функции с использование замыкания 
// Наше замыкание
$double = function($a) {
    return $a * 2;
};

// Диапазон чисел
$numbers = range(1, 5);

// Использование замыкания в качестве callback-функции
// для удвоения каждого элемента в нашем диапазоне
$new_numbers = array_map($double, $numbers);
------------------------

4) Область видимости переменной - это место в программе в котором видна переменная, например переменные объявленные в функции, доступны только локальне, т.е их не видно из вне, есть еще и глобальные переменные, они видны из любоо места в программе




* Работа с ссылками

Ссылки в PHP — это, грубо говоря, способ получить доступ к одной и той же переменной, например у нас есть переменная $a, и мы вызываем функцию generate(&$a), и если мы поставим амперсанд, то переменную которую мы передали туда, будет связана с ним, и если мы там ее удалим, то он удалится глобально, а если мы передадим в аргументы, без & то, значение просто скопируется


* Передача объектов по ссылке
Важно понимать особенности с передачей объектов. Вы могли читать, что в php все объекты передаются по ссылке

Это было верно до php5, но сейчас передается только идентификатор объекта (документация).
Если вкратце, если вы создали объект, и передали его в функцию, внутри которой вы сделали

$object = null;

это не значит что оригинальный объект тоже обнулится, вы все так же можете с ним работать. А вот если вы явно передали объект по ссылке — то это действие “обнулит” и оригинальный объект. 



* Замыкание
	Это тот же callback-функция, но просто можно передать переменные внутри конструкции use() - эти переменные будут видны в callback-функции




-----------------------------------------------------------------------------------------
! Еще нужно расмортреть некоторые функции пхп для работы с массивами


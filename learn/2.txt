===============Вопросы про ООП==================

Блок про ООП:
 	* Абриавитуры, SOLID, DRY, KISS, DDD, TDD - подробно
 	* классы, интрефейсы, абстраткные классы, чем отличается аб. класс от интерфейса
 	* Основные паттерны проектирования


1) Что такое ООП - Это модель по которую мы создаем, наше приложение с помощью классов и объектов

Сначала разберемся что такое объект?:

* Все что вокруг нас объект, и него есть свойства (характеристики) и этого объекта
есть методы - действия которые он выполняет, пример:

Машина - это объект, у любой машины есть такие свойства: как модоль, цвет, размер и т.д

и у него есть методы, start(), stop() и т.д 


2) Инкапсуляция, наследование и полиморфизм

3) Абстрактный класс

-------------------


==========ООП
Объе́ктно-ориенти́рованное программи́рование (ООП) — методология программирования, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определённого класса, а классы образуют иерархию наследования.

* Абстрактные классы/методы

    Не предполагает создание экземпляров.
    Реализуют на практике один из принципов ООП — полиморфизм.
    Может содержать абстрактные методы и свойства. Абстрактный метод не реализуется для класса, в котором описан, однако должен быть реализован для его не абстрактных потомков.
    Представляют собой наиболее общие абстракции, то есть имеющие наибольший объем и наименьшее содержание.


Нюансы реализации в документации.

* Интерфейсы

Интерфейс, в отличие от абстрактного класса, не может содержать поля и методы, имеющие реализацию – он описывает только сигнатуры метода, которые должны реализовать его наследники. В отличие от того же абстрактного класса, класс может реализовывать одновременно множество интерфейсов.



* Traits

Трейт очень похож на класс, но предназначен для группирования функционала и его дальнейшего переиспользования во множестве классов, которые не могут быть связаны одним абстрактным классом. Иногда еще говорят, что трейт — это способ реализовать множественное наследование в PHP.


* JSON (JavaScript Object Notation) - простой формат обмена данными, удобный для чтения и написания как человеком, так и компьютером.


* Инкапсуляция (англ. encapsulation, от лат. in capsula) — Также может означать скрытие внутренней реализации от других компонентов.

* Полиморфизм - https://habr.com/ru/post/37576/


